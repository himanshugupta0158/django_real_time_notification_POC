"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 5.0.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-*7ar&i0_w8l5(pb0%)g&=0@9&ke8hq6%n-9dfv4xw*t%ugy6a0"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    # ðŸ‘‡ 1. Add the below line
    "daphne", # add this for django channels for notification
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "notification", # adding this for notification django app 
]

"""
By adding "daphne" to the INSTALLED_APPS, 
you are including the Daphne ASGI server as part of your project. 
Daphne is a high-performance ASGI server that Django Channels can 
use to handle WebSocket connections.
"""


MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "core.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        # ðŸ‘‡ 2. Add the below line for 'templates'
        "DIRS": ['templates'],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

# ðŸ‘‡ 3. Comment the below line 
# WSGI_APPLICATION = "core.wsgi.application"

"""
The WSGI_APPLICATION setting specifies the WSGI application that Django uses to handle HTTP requests.
By commenting out the line (# WSGI_APPLICATION = 'myproject.wsgi.application'), 
you are disabling the default WSGI application configuration.
"""


# ðŸ‘‡ 4. Add the below line for asgi config
ASGI_APPLICATION = 'core.asgi.application'
"""
The ASGI_APPLICATION setting specifies the ASGI application that Django uses to handle WebSocket 
connections and other asynchronous operations.
By adding ASGI_APPLICATION = 'myproject.asgi.application', 
you are pointing Django to the ASGI application located in the "core" directory with the filename "asgi.py".
"""


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"


# ðŸ‘‡ 5. Add the below line for channel layer
CHANNEL_LAYERS = {
    'default': {
        'BACKEND': "channels.layers.InMemoryChannelLayer"
    }
}

"""
The CHANNEL_LAYERS setting configures the communication layer used by Django Channels for WebSocket handling.
By defining 'BACKEND': "channels.layers.InMemoryChannelLayer" under the 'default' key, 
you are using the in-memory channel layer provided by Django Channels for development purposes.
In production, you would typically use a more robust channel layer backend, such as Redis or RabbitMQ.*
"""